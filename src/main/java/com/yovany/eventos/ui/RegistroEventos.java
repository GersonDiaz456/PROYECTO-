/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.yovany.eventos.ui;

import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

import com.yovany.eventos.entity.Evento; // Asegúrate de importar la clase Evento
import java.awt.Color;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.nio.charset.StandardCharsets;
import javax.swing.JOptionPane;

/**
 *
 * @author Yovany
 */
public class RegistroEventos extends javax.swing.JFrame {
    int xMouse, yMouse;
    /**
     * Creates new form RegistroEventos
     */
    public RegistroEventos() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        NombreEvento = new javax.swing.JLabel();
        LugarEvento = new javax.swing.JLabel();
        FechaEvento = new javax.swing.JLabel();
        HoraEvento = new javax.swing.JLabel();
        LugarEbento = new javax.swing.JTextField();
        NombreEbento = new javax.swing.JTextField();
        FechaEbento = new javax.swing.JTextField();
        HoraEbento = new javax.swing.JTextField();
        GuardarEvento = new javax.swing.JButton();
        botonregresar = new javax.swing.JToggleButton();
        panelx = new javax.swing.JPanel();
        X = new javax.swing.JLabel();
        lineax = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setUndecorated(true);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Sylfaen", 0, 24)); // NOI18N
        jLabel1.setText("Registro Eventos");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 90, 196, 30));

        NombreEvento.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        NombreEvento.setText("Nombre Evento");
        jPanel1.add(NombreEvento, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 126, -1));

        LugarEvento.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        LugarEvento.setText("Lugar del Evento");
        jPanel1.add(LugarEvento, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, -1, -1));

        FechaEvento.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        FechaEvento.setText("Fecha del evento");
        jPanel1.add(FechaEvento, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 126, -1));

        HoraEvento.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        HoraEvento.setText("Hora del Evento");
        jPanel1.add(HoraEvento, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 126, -1));
        jPanel1.add(LugarEbento, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, 267, -1));

        NombreEbento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NombreEbentoActionPerformed(evt);
            }
        });
        jPanel1.add(NombreEbento, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 160, 267, -1));
        jPanel1.add(FechaEbento, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, 267, -1));
        jPanel1.add(HoraEbento, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 290, 267, -1));

        GuardarEvento.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        GuardarEvento.setText("Guardar Evento");
        GuardarEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarEventoActionPerformed(evt);
            }
        });
        jPanel1.add(GuardarEvento, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 370, 203, -1));

        botonregresar.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        botonregresar.setText("Menu Principal");
        botonregresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonregresarActionPerformed(evt);
            }
        });
        jPanel1.add(botonregresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 330, 200, 30));

        X.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        X.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        X.setText("X");
        X.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        X.setPreferredSize(new java.awt.Dimension(40, 40));
        X.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                XMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                XMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                XMouseExited(evt);
            }
        });

        javax.swing.GroupLayout panelxLayout = new javax.swing.GroupLayout(panelx);
        panelx.setLayout(panelxLayout);
        panelxLayout.setHorizontalGroup(
            panelxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(X, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
        );
        panelxLayout.setVerticalGroup(
            panelxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(X, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.add(panelx, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 80, 50));

        lineax.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                lineaxMouseDragged(evt);
            }
        });
        lineax.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lineaxMousePressed(evt);
            }
        });

        javax.swing.GroupLayout lineaxLayout = new javax.swing.GroupLayout(lineax);
        lineax.setLayout(lineaxLayout);
        lineaxLayout.setHorizontalGroup(
            lineaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );
        lineaxLayout.setVerticalGroup(
            lineaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jPanel1.add(lineax, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NombreEbentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NombreEbentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NombreEbentoActionPerformed

    private void GuardarEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarEventoActionPerformed
    GuardarEvento.setEnabled(false);   
    Evento nuevoEvento = new Evento();
    
    
    // Verifica que los campos no estén vacíos
    if (NombreEbento.getText().isEmpty() || FechaEbento.getText().isEmpty() || HoraEbento.getText().isEmpty() || LugarEbento.getText().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, completa todos los campos");
        GuardarEvento.setEnabled(true); // Rehabilitar el botón si hay error
        return; // Sale si hay un error
    }
    nuevoEvento.setNombre(NombreEbento.getText());
    nuevoEvento.setLugar(LugarEbento.getText());
    // Convertir la fecha y la hora desde String a LocalDate y LocalTime
    try {
        String fechaTexto = FechaEbento.getText();
        String horaTexto = HoraEbento.getText();

        // Asegúrate de que el formato coincida con lo que esperas
        DateTimeFormatter formatterFecha = DateTimeFormatter.ofPattern("yyyy-MM-dd"); // Ajusta el formato según tu necesidad
        DateTimeFormatter formatterHora = DateTimeFormatter.ofPattern("HH:mm"); // Ajusta el formato según tu necesidad

        LocalDate fecha = LocalDate.parse(fechaTexto, formatterFecha);
        LocalTime hora = LocalTime.parse(horaTexto, formatterHora);

        nuevoEvento.setFecha(fecha);
        nuevoEvento.setHora(hora);
        
    } catch (DateTimeParseException e) {
        JOptionPane.showMessageDialog(this, "Formato de fecha/hora incorrecto: " + e.getMessage());
        return; // Salir si hay un error de formato
    }
    
    
    
    
    
    
    

    // Envía los datos a la API
    String url = "http://localhost:8080/eventos"; // Cambia la URL según tu configuración

    try {
        // Aquí se realiza la llamada HTTP POST
        URL obj = new URL(url); // Esta línea crea un objeto URL con la dirección de tu API
        HttpURLConnection con = (HttpURLConnection) obj.openConnection(); // Abre la conexión
        con.setRequestMethod("POST"); // Especifica que es una solicitud POST
        con.setRequestProperty("Content-Type", "application/json"); // Establece el tipo de contenido a JSON
        con.setDoOutput(true); // Permite que se envíen datos a la conexión

        // Convertir el objeto Evento a JSON
        String jsonInputString = String.format(
             "{\"nombre\":\"%s\", \"fecha\":\"%s\", \"hora\":\"%s\", \"lugar\":\"%s\"}",
                nuevoEvento.getNombre(), nuevoEvento.getFecha(), nuevoEvento.getHora(), nuevoEvento.getLugar()
            );

        // Enviar la solicitud
        try (java.io.OutputStream os = con.getOutputStream()) {
            byte[] input = jsonInputString.getBytes(StandardCharsets.UTF_8); // Convierte el JSON a bytes
            os.write(input, 0, input.length); // Escribe los bytes en el flujo de salida
        }

        int responseCode = con.getResponseCode(); // Obtiene el código de respuesta de la API
        if (responseCode == HttpURLConnection.HTTP_OK) {
            JOptionPane.showMessageDialog(this, "Evento guardado con éxito");
            // Limpiar campos después de guardar
            NombreEbento.setText("");
            FechaEbento.setText("");
            HoraEbento.setText("");
            LugarEbento.setText("");
            
        } else {
            JOptionPane.showMessageDialog(this, "Error al guardar el evento");
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error de conexión: " + e.getMessage());
    } finally {
        GuardarEvento.setEnabled(true); // Rehabilitar el botón después de intentar guardar
    }
    

    }//GEN-LAST:event_GuardarEventoActionPerformed

    private void botonregresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonregresarActionPerformed
        Menu newframe= new Menu();
        newframe.setVisible(true);
        
        this.dispose();
    }//GEN-LAST:event_botonregresarActionPerformed

    private void lineaxMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lineaxMousePressed
       xMouse= evt.getX();
       yMouse= evt.getY();
       
    }//GEN-LAST:event_lineaxMousePressed

    private void lineaxMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lineaxMouseDragged
      int x= evt.getXOnScreen();
       int y= evt.getYOnScreen();
        this.setLocation(x-xMouse,y-yMouse);
    }//GEN-LAST:event_lineaxMouseDragged

    private void XMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_XMouseClicked
        System.exit(0);
    }//GEN-LAST:event_XMouseClicked

    private void XMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_XMouseEntered
        panelx.setBackground(Color.red);
    }//GEN-LAST:event_XMouseEntered

    private void XMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_XMouseExited
       panelx.setBackground(Color.white);
    }//GEN-LAST:event_XMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroEventos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField FechaEbento;
    private javax.swing.JLabel FechaEvento;
    private javax.swing.JButton GuardarEvento;
    private javax.swing.JTextField HoraEbento;
    private javax.swing.JLabel HoraEvento;
    private javax.swing.JTextField LugarEbento;
    private javax.swing.JLabel LugarEvento;
    private javax.swing.JTextField NombreEbento;
    private javax.swing.JLabel NombreEvento;
    private javax.swing.JLabel X;
    private javax.swing.JToggleButton botonregresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel lineax;
    private javax.swing.JPanel panelx;
    // End of variables declaration//GEN-END:variables
}
